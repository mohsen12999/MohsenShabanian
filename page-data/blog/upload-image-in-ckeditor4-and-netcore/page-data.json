{"componentChunkName":"component---src-templates-blog-template-js","path":"/blog/upload-image-in-ckeditor4-and-netcore","result":{"data":{"markdownRemark":{"html":"<p>inside ckeditor4 folder add this inside <code>config.js</code></p>\n<pre><code class=\"language-js\">CKEDITOR.editorConfig = function(config) {\n  // other config\n  config.removeDialogTabs =\n    \"image:advanced;image:Link;link:advanced;link:upload\"\n  config.filebrowserImageUploadUrl = \"&#x3C;Address-to-controller>\"\n}\n</code></pre>\n<p>you can add static address for uploading pic like: <code>/Admin/Upload</code> or dynamic depend on when it happen like <code>?handler=UploadImage</code> in razor page framework.</p>\n<p>for prevent <code>400</code> error, Forgery problem we must do two things. in <code>Startup.cs</code> file add this line:</p>\n<pre><code class=\"language-cs\">public void ConfigureServices(IServiceCollection services)\n{\n  // other things\n  services.AddAntiforgery(o => o.HeaderName = \"XSRF-TOKEN\");\n}\n</code></pre>\n<p>every time we use ckeditor4 in cshtml file add this things.</p>\n<pre><code class=\"language-cshtml\">// in form or other place\n@Html.AntiForgeryToken()\n\n// when we called ckeditor4\n&#x3C;script>\n  CKEDITOR.replace('City_Description', {\n    language: 'fa',\n    fileTools_requestHeaders: {\n      \"XSRF-TOKEN\":$('input:hidden[name=\"__RequestVerificationToken\"]').val()\n    }\n  });\n&#x3C;/script>\n</code></pre>","frontmatter":{"date":"05 March, 2020","title":"upload image in ckeditor4 and netcore","path":"/blog/upload-image-in-ckeditor4-and-netcore","img":"/images/blog/ckeditor4.jpg"}}},"pageContext":{}},"staticQueryHashes":["1930764950"]}